# encoding: utf-8
# 2021 R1
SetScriptVersion(Version="21.1.216")
template1 = GetTemplate(TemplateName="Geometry")
system1 = template1.CreateSystem()
template2 = GetTemplate(TemplateName="FLTG")
system2 = template2.CreateSystem(
    Position="Right",
    RelativeTo=system1)
geometryComponent1 = system1.GetComponent(Name="Geometry")
meshComponent1 = system2.GetComponent(Name="Mesh")
geometryComponent1.TransferData(TargetComponent=meshComponent1)
geometry1 = system1.GetContainer(ComponentName="Geometry")
geometry1.Edit(IsSpaceClaimGeometry=True)
geometry1.Exit()
geometry1.SetFile(FilePath="D:/S2_C1/Fluid-Domain-v3.scdoc")
tGridCADImportOptions1 = GetDataEntity("/Mesh/TGridCADImportOptions:TGridCADImportOptions")
tGridCADImportOptions1.Units = "mm"
setup1 = system2.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(Precision="Double", EnvPath={}, RunParallel=True, NumberOfProcessorsMeshing=4, NumberOfProcessors=4))
tGridData1 = GetDataEntity("/Mesh/TGridData:TGridData")
tGridData1.SetEntityProperties(Properties=Set(RunParallel=True, NumberOfProcs=4))
mesh1 = system2.GetContainer(ComponentName="Mesh")
Fluent.Edit(Container=mesh1)
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
meshComponent1.Refresh()
setup1.SendCommand(Command='/file/set-tui-version "21.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Execute()\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(7975.2 -6925.39 -202.836) '(0 0 0) '(0.10957 0.101325 0.0595322) 0 0)")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-33326.7 -34953.1 27686.7) '(0 0 0) '(0.292178 0.1852 0.495745) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-52025.1 10978.9 -32634.7) '(0 0 0) '(0.143271 -0.0265964 -0.305941) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(11413.4 19351.8 6193.55) '(0 0 0) '(0.207298 -0.122563 -0.221819) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(7362.19 -21708.4 16669) '(0 0 0) '(-0.296622 0.142283 0.316304) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(838.84 -14741.4 48.6758) '(0 0 0) '(-0.149318 -0.0077908 0.220834) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-18570 9099.55 -19417.9) '(0 0 0) '(0.162203 0.0184907 -0.128993) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(15025.8 41892.5 -13896) '(0 0 0) '(0.697355 -0.354827 -0.314614) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-12805.2 -26460.4 13292.7) '(0 0 0) '(-0.437921 0.316002 0.208407) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-178.402 -19076.4 3911.17) '(0 0 0) '(-0.300271 0.0387716 0.174754) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(6189.47 18879.3 4971.24) '(0 0 0) '(0.27021 -0.0371837 -0.201303) 0 0)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.setState({r'AddChild': r'yes',r'BOIControlName': r'boi-nearfield',r'BOIExecution': r'Body Of Influence',r'BOIFaceLabelList': [r'boi-nearfield'],r'BOISize': 16,})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].AddChildToTask()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].InsertCompoundChildTask()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.setState({r'AddChild': r'yes',})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['boi-nearfield'].Execute()\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-use-window-id 51)(handle-key \"??\")(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(handle-key \"??\")(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(-368.549 493.938 -706.18) '(0 0 0) '(0.026539 -0.010927 -0.0231367) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(516.72 -258.52 590.116) '(0 0 0) '(-0.0370387 0.0250771 0.0956242) 0 0)(cx-use-window-id 51)(handle-key \"??\")(cx-use-window-id 51)(cx-set-camera-relative '(15677 13508.9 -4340.91) '(0 0 0) '(0.192052 -0.424468 -0.619467) 0 0)(cx-use-window-id 51)(handle-key \"??\")(cx-use-window-id 51)(cx-set-camera-relative '(-14114 -6297.44 1982.25) '(0 0 0) '(-0.14495 0.307667 0.286225) 0 0)(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(dolly-camera 256.42 -148.489 0)(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(dolly-camera -854.252 395.205 0)(cx-use-window-id 51)(handle-key \"control ??\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.setState({r'AddChild': r'yes',r'BOIControlName': r'curvature_wing',r'BOIExecution': r'Curvature',r'BOIFaceLabelList': [r'frontwing', r'rearwing'],r'BOIMaxSize': 12,r'BOIMinSize': 0.5,})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].AddChildToTask()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].InsertCompoundChildTask()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.setState({r'AddChild': r'yes',})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['curvature_wing'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Arguments.setState({r'CFDSurfaceMeshControls': {r'CellsPerGap': 3,r'MaxSize': 256,r'MinSize': 0.5,},})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Arguments.setState({r'SetupType': r'The geometry consists of only fluid regions with no voids',})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=True)\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Arguments.setState({r'InvokeShareTopology': r'No',r'SetupType': r'The geometry consists of only fluid regions with no voids',})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Boundaries'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Regions'].Arguments.setState({r'OldRegionNameList': [r'boi-farfield'],r'OldRegionTypeList': [r'solid'],r'RegionNameList': [r'boi-farfield'],r'RegionTypeList': [r'fluid'],})\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Error*OK")')
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Revert()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].Arguments.setState({r'BlLabelList': [r'chassis'],r'FaceScope': {r'GrowOn': r'selected-labels',},r'LocalPrismPreferences': {r'ShowLocalPrismPreferences': False,},r'NumberOfLayers': 10,r'OffsetMethodType': r'last-ratio',r'TransitionRatio': 0.2,})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].AddChildToTask()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].InsertCompoundChildTask()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['last-ratio_1'].Arguments.setState({r'BLControlName': r'last-ratio_1',r'BlLabelList': [r'chassis'],r'FaceScope': {r'GrowOn': r'selected-labels',},r'LocalPrismPreferences': {r'ShowLocalPrismPreferences': False,},r'NumberOfLayers': 10,r'OffsetMethodType': r'last-ratio',r'TransitionRatio': 0.2,})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].Arguments.setState({})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['last-ratio_1'].ExecuteUpstreamNonExecutedAndThisTask()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].Arguments.setState({r'VolumeFill': r'poly-hexcore',})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].InsertNextTask(CommandName=r'VolumeMeshImprove')\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
meshComponent1.Reset()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "21.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
meshComponent1.Reset()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "21.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Arguments.setState({r'FileName': r'D:\\S2_C1\\Fluid-Domain-v3.scdoc',r'LengthUnit': r'm',r'NumParts': 3,})\")")
tGridData1.RunParallel = False
meshComponent1.Reset()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "21.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
tGridCADImportOptions1.Units = "mm"
meshComponent1.Refresh()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "21.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Arguments.setState({r'FileName': r'D:\\S2_C1\\Fluid-Domain-v3.scdoc',r'LengthUnit': r'mm',r'NumParts': 3,})\")")
tGridCADImportOptions1.Units = "m"
system2.Delete()
system3 = template2.CreateSystem(
    Position="Right",
    RelativeTo=system1)
meshComponent2 = system3.GetComponent(Name="Mesh")
geometryComponent1.TransferData(TargetComponent=meshComponent2)
tGridCADImportOptions2 = GetDataEntity("/Mesh/TGridCADImportOptions:TGridCADImportOptions")
tGridCADImportOptions2.Units = "mm"
setup2 = system3.GetContainer(ComponentName="Setup")
fluentLauncherSettings2 = setup2.GetFluentLauncherSettings()
fluentLauncherSettings2.SetEntityProperties(Properties=Set(Precision="Double", EnvPath={}, RunParallel=True, NumberOfProcessorsMeshing=4, NumberOfProcessors=4))
tGridData2 = GetDataEntity("/Mesh/TGridData:TGridData")
tGridData2.SetEntityProperties(Properties=Set(RunParallel=True, NumberOfProcs=4))
mesh2 = system3.GetContainer(ComponentName="Mesh")
Fluent.Edit(Container=mesh2)
setup2.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
meshComponent2.Refresh()
setup2.SendCommand(Command='/file/set-tui-version "21.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Preferences...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Warning*OK")')
setup2.SendCommand(Command="(%py-exec \"preferences.Appearance.ColorTheme.setState(r'Default')\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Preferences*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.setState({r'AddChild': r'yes',r'BOIControlName': r'boi-nearfield',r'BOIExecution': r'Body Of Influence',r'BOIFaceLabelList': [r'boi-nearfield'],r'BOISize': 16,})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].AddChildToTask()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].InsertCompoundChildTask()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.setState({r'AddChild': r'yes',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['boi-nearfield'].Execute()\")")
setup2.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-63814.6 -37021.3 14018.7) '(0 0 0) '(0.190266 0.190743 0.187053) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-9792.25 28485.8 -40601.4) '(0 0 0) '(0.80954 -0.130565 -0.0888962) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(13216.2 -10549.7 38661.1) '(0 0 0) '(-0.309441 0.163907 0.0909439) 0 0)(cx-use-window-id 51)(handle-key \"??\")(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(-9.82666 -500.354 192.626) '(0 0 0) '(-0.089026 0.0396079 0.0934049) 0 0)(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(dolly-camera 1225.71 -810.312 0)(cx-use-window-id 51)(cx-set-camera-relative '(-208.042 72.8524 -198.581) '(0 0 0) '(0.0173104 -0.00559968 -0.0156217) 0 0)(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(dolly-camera -695.315 875.603 0)(cx-use-window-id 51)(dolly-camera -9.1084 -133.774 0)(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(dolly-camera 775.539 837.584 0)")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.setState({r'AddChild': r'yes',r'BOIControlName': r'curvature-wing',r'BOIExecution': r'Curvature',r'BOIFaceLabelList': [r'frontwing', r'rearwing'],r'BOIMaxSize': 12,r'BOIMinSize': 0.5,})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].AddChildToTask()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].InsertCompoundChildTask()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.setState({r'AddChild': r'yes',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['curvature-wing'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.setState({r'AddChild': r'yes',r'BOIControlName': r'curvature-rods',r'BOIExecution': r'Curvature',r'BOIFaceLabelList': [r'rods'],r'BOIMaxSize': 16,r'BOIMinSize': 4,})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].AddChildToTask()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].InsertCompoundChildTask()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.setState({r'AddChild': r'yes',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['curvature-rods'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.setState({r'AddChild': r'yes',r'BOIControlName': r'curvature-wheels',r'BOIExecution': r'Curvature',r'BOIFaceLabelList': [r'frontwheel', r'rearwheel'],r'BOIMaxSize': 32,r'BOIMinSize': 16,})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].AddChildToTask()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].InsertCompoundChildTask()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.setState({r'AddChild': r'yes',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['curvature-wheels'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.setState({r'AddChild': r'yes',r'BOIControlName': r'curvature-brakes',r'BOIExecution': r'Curvature',r'BOIFaceLabelList': [r'frontbrakes', r'rearbrakes'],r'BOIMaxSize': 32,r'BOIMinSize': 16,})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].AddChildToTask()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].InsertCompoundChildTask()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.setState({r'AddChild': r'yes',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['curvature-brakes'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.setState({r'AddChild': r'yes',r'BOIControlName': r'curvature_chassis',r'BOIExecution': r'Curvature',r'BOIFaceLabelList': [r'chassis'],r'BOIMaxSize': 32,r'BOIMinSize': 8,})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].AddChildToTask()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].InsertCompoundChildTask()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.setState({r'AddChild': r'yes',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['curvature_chassis'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['curvature_chassis'].Revert()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['curvature_chassis'].Arguments.setState({r'AddChild': r'yes',r'BOIControlName': r'curvature-chassis',r'BOIExecution': r'Curvature',r'BOIFaceLabelList': [r'chassis'],r'BOIMaxSize': 32,r'BOIMinSize': 8,})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['curvature_chassis'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.setState({r'AddChild': r'yes',r'BOIControlName': r'curvature-wheelradii',r'BOIExecution': r'Curvature',r'BOIFaceLabelList': [r'wheelradii'],r'BOIMaxSize': 4,r'BOIMinSize': 1,})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].AddChildToTask()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].InsertCompoundChildTask()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.setState({r'AddChild': r'yes',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['curvature-wheelradii'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.setState({r'AddChild': r'yes',r'BOIControlName': r'boi-farfield',r'BOIExecution': r'Body Of Influence',r'BOIFaceLabelList': [r'boi-farfield'],r'BOISize': 64,})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].AddChildToTask()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].InsertCompoundChildTask()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.setState({r'AddChild': r'yes',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['boi-farfield'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Arguments.setState({r'CFDSurfaceMeshControls': {r'CellsPerGap': 3,r'MaxSize': 256,r'MinSize': 0.5,},})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup2.SendCommand(Command="(cx-use-window-id 51)(cx-use-window-id 51)(handle-key \"??\")(cx-use-window-id 51)(cx-set-camera-relative '(1321.92 -71.479 1105.86) '(0 0 0) '(-0.00544331 0.00245684 0.00760126) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-359.198 -253.954 -213.051) '(0 0 0) '(0.00696801 0.0119879 0.0646056) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-179.119 493.51 -416.617) '(0 0 0) '(0.122181 -0.0724777 -0.183123) 0 0)(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(dolly-camera 1303.7 -599.884 0)(cx-use-window-id 51)(cx-set-camera-relative '(108.73 789.584 -604.519) '(0 0 0) '(0.150017 -0.0886217 -0.0755844) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-2085.38 -15038.9 6384.06) '(0 0 0) '(-0.380328 0.171308 0.27787) 0 0)(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(dolly-camera -581.191 1420.7 0)(cx-use-window-id 51)(cx-set-camera-relative '(530.783 6855.05 -1646.2) '(0 0 0) '(0.165735 -0.0446945 -0.132333) 0 0)")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Arguments.setState({r'SetupType': r'The geometry consists of only fluid regions with no voids',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=True)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Boundaries'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Regions'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].Arguments.setState({r'BlLabelList': [r'chassis', r'frontbrakes', r'frontwheel', r'frontwing', r'rearbrakes', r'rearwheel', r'rearwing', r'rods', r'wheelradii'],r'FaceScope': {r'GrowOn': r'selected-labels',},r'NumberOfLayers': 10,r'OffsetMethodType': r'last-ratio',r'TransitionRatio': 0.2,})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].AddChildToTask()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].InsertCompoundChildTask()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['last-ratio_1'].Arguments.setState({r'BLControlName': r'last-ratio_1',r'BlLabelList': [r'chassis', r'frontbrakes', r'frontwheel', r'frontwing', r'rearbrakes', r'rearwheel', r'rearwing', r'rods', r'wheelradii'],r'FaceScope': {r'GrowOn': r'selected-labels',},r'NumberOfLayers': 10,r'OffsetMethodType': r'last-ratio',r'TransitionRatio': 0.2,})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].Arguments.setState({})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['last-ratio_1'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].Arguments.setState({r'VolumeFill': r'poly-hexcore',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].Execute()\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Clipping Planes)*CheckButton6(Draw Cell Layer)" #f)(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Clipping Planes)*CheckButton6(Draw Cell Layer)")(cx-gui-do cx-set-toggle-button2 "Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Clipping Planes)*ButtonBox1*Limit in X" #t)(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Clipping Planes)*ButtonBox1*Limit in X")(cx-gui-do cx-set-toggle-button2 "Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Clipping Planes)*ButtonBox1*Limit in Z" #t)(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Clipping Planes)*ButtonBox1*Limit in Z")')
setup2.SendCommand(Command='(cx-gui-do cx-set-scale "Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Clipping Planes)*Scale2" 16)(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Clipping Planes)*Scale2")')
setup2.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Clipping Planes)*CheckButton6(Draw Cell Layer)\" #t)(cx-gui-do cx-activate-item \"Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Clipping Planes)*CheckButton6(Draw Cell Layer)\")(cx-use-window-id 51)(cx-gui-do cx-set-toggle-button2 \"Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Clipping Planes)*CheckButton6(Draw Cell Layer)\" #f)(cx-gui-do cx-activate-item \"Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Clipping Planes)*CheckButton6(Draw Cell Layer)\")(cx-use-window-id 51)(cx-gui-do cx-set-toggle-button2 \"Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Clipping Planes)*CheckButton6(Draw Cell Layer)\" #t)(cx-gui-do cx-activate-item \"Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Clipping Planes)*CheckButton6(Draw Cell Layer)\")(cx-use-window-id 51)(cx-set-camera-relative '(181.381 -480.196 386.269) '(0 0 0) '(-0.109961 0.0350537 0.0879723) 0 0)(cx-use-window-id 51)(dolly-camera -1152.18 633.372 0)(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(dolly-camera -193.898 22.2363 0)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*View*autoscale")')
setup2.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(6135.01 1640.63 2677.12) '(0 0 0) '(-0.019099 -0.0346749 -0.135825) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-33.6791 -646.706 106.89) '(0 0 0) '(-0.0515489 0.0544457 0.313069) 0 0)(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(dolly-camera 231.296 -23.9219 0)(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(dolly-camera 1186.45 -207.576 0)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*MeshMenu*Check Quality")')
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].InsertNextTask(CommandName=r'VolumeMeshImprove')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Volume Mesh'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.DeleteTasks(ListOfTasks=[r'Improve Volume Mesh'])\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReportMenu*Mesh Size...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Report Mesh Size*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Report Mesh Size*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Clipping Planes)*CheckButton5(Insert Clipping Planes)\" #t)(cx-gui-do cx-activate-item \"Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Clipping Planes)*CheckButton5(Insert Clipping Planes)\")(cx-gui-do cx-set-toggle-button2 \"Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Clipping Planes)*CheckButton6(Draw Cell Layer)\" #t)(cx-gui-do cx-activate-item \"Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Clipping Planes)*CheckButton6(Draw Cell Layer)\")(cx-gui-do cx-set-toggle-button2 \"Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Clipping Planes)*CheckButton6(Draw Cell Layer)\" #f)(cx-gui-do cx-activate-item \"Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Clipping Planes)*CheckButton6(Draw Cell Layer)\")(cx-gui-do cx-set-toggle-button2 \"Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Clipping Planes)*CheckButton5(Insert Clipping Planes)\" #f)(cx-gui-do cx-activate-item \"Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Clipping Planes)*CheckButton5(Insert Clipping Planes)\")(cx-use-window-id 51)(cx-set-camera-relative '(-10032.6 -54181.8 21844) '(0 0 0) '(0.550477 0.248074 0.791691) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-49563 25942.1 -6745.06) '(0 0 0) '(0.0741706 0.0272425 -0.430656) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-6320.43 2558.99 -6534.52) '(0 0 0) '(-0.0078109 -0.0131853 -0.077675) 0 0)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReportMenu*Mesh Size...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReportMenu*Mesh Size...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Report Mesh Size*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Report Mesh Size*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(8886.34 8534.57 4259.8) '(0 0 0) '(0.0957834 -0.0491022 -0.112221) 0 0)")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].InsertNextTask(CommandName=r'VolumeMeshImprove')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Volume Mesh'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.DeleteTasks(ListOfTasks=[r'Improve Volume Mesh'])\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Clipping Planes)*CheckButton5(Insert Clipping Planes)" #t)(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Clipping Planes)*CheckButton5(Insert Clipping Planes)")(cx-use-window-id 51)(cx-use-window-id 51)')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*View*autoscale")')
setup2.SendCommand(Command='(cx-use-window-id 51)(cx-gui-do cx-set-toggle-button2 "Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Clipping Planes)*CheckButton6(Draw Cell Layer)" #t)(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Clipping Planes)*CheckButton6(Draw Cell Layer)")(cx-use-window-id 51)(dolly-camera 799.205 73.3268 0)(cx-use-window-id 51)(handle-key "control ??")(cx-use-window-id 51)(dolly-camera 222.04 91.1848 0)(cx-use-window-id 51)(dolly-camera -296.683 -34.1907 0)(cx-use-window-id 51)(handle-key "control ??")(cx-use-window-id 51)(dolly-camera 17.3828 -30.1184 0)')
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].InsertNextTask(CommandName=r'VolumeMeshImprove')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Volume Mesh'].Arguments.setState({r'CellQualityLimit': 0.1,})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Volume Mesh'].Execute()\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*DisplayMenu*Views...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Views*ButtonBox3(Actions)*PushButton5(Save)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Views*PanelButtons*PushButton2(Close)")')
setup2.SendCommand(Command="(%py-exec \"workflow.DeleteTasks(ListOfTasks=[r'Improve Volume Mesh'])\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*DisplayMenu*Views...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Views*PanelButtons*PushButton2(Close)")')
setup2.SendCommand(Command="(cx-use-window-id 51)(cx-gui-do cx-set-toggle-button2 \"Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Clipping Planes)*CheckButton6(Draw Cell Layer)\" #t)(cx-gui-do cx-activate-item \"Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Clipping Planes)*CheckButton6(Draw Cell Layer)\")(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(82.7958 87.515 -0.795898) '(0 0 0) '(0.000130937 -4.60148e-05 -0.00960628) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-1877.62 -1691.22 -303.938) '(0 0 0) '(-0.0181975 -0.0139978 0.175639) 0 0)(cx-use-window-id 51)(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(dolly-camera -2620.79 -766.538 0)(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(dolly-camera -1135.65 -483.348 0)(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(dolly-camera -376.649 -73.2677 0)(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(dolly-camera -2077.92 -1277.63 0)(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(dolly-camera -6.58618 -36.2143 0)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*MeshMenu*Check Quality")')
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].InsertNextTask(CommandName=r'VolumeMeshImprove')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Volume Mesh'].Arguments.setState({r'CellQualityLimit': 0.1,})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Volume Mesh'].Execute()\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*MeshMenu*Check Quality")')
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:/Users/kgoparaj/AppData/Local/Temp/WB_kgoparaj_10412_2/wbnew_files/dp0/FLTG/Fluent/Meshing_workflow')\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
Save(Overwrite=True)
